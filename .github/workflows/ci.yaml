---
name: CI

on:
  push:
    branches:
      - main
  pull_request: ~
  workflow_dispatch: ~

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  tests:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          persist-credentials: false
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build Docker images
        uses: docker/bake-action@v6
        with:
          pull: true
          load: true
          source: .
          files: |
            compose.yaml
            compose.override.yaml
          set: |
            *.cache-from=type=gha,scope=${{github.ref}}
            *.cache-from=type=gha,scope=refs/heads/main
            *.cache-to=type=gha,scope=${{github.ref}},mode=max
      - name: Start services
        run: docker compose up --wait --no-build
      - name: Check HTTP reachability
        run: curl -v --fail-with-body http://localhost
      - name: Check HTTPS reachability
        if: false # Remove this line when the homepage is configured, or change the path to check
        run: curl -v --insecure --fail-with-body https://localhost
      - name: Check Mercure reachability
        run: curl -vI --insecure --fail-with-body https://localhost/.well-known/mercure?topic=test
      - name: Create test database
        if: false # Remove this line if Doctrine ORM is installed
        run: docker compose exec -T php bin/console -e test doctrine:database:create
      - name: Run migrations
        if: false # Remove this line if Doctrine Migrations is installed
        run: docker compose exec -T php bin/console -e test doctrine:migrations:migrate --no-interaction
      - name: Run PHPUnit
        if: false # Remove this line if PHPUnit is installed
        run: docker compose exec -T php bin/phpunit
      - name: Doctrine Schema Validator
        if: false # Remove this line if Doctrine ORM is installed
        run: docker compose exec -T php bin/console -e test doctrine:schema:validate
  lint:
    name: Lint
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
      statuses: write
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'
          extensions: xml, sockets, gd, amqp, zip, pdo, sodium, intl, ctype, iconv
          tools: composer
      - name: Install Composer dependencies
        run: composer install --no-interaction --prefer-dist --optimize-autoloader
      - name: Lint Code Base
        uses: super-linter/super-linter@v8
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BRANCH: main
          VALIDATE_PHP_BUILTIN: true
          VALIDATE_DOCKERFILE_HADOLINT: true
          VALIDATE_YAML: true
          VALIDATE_JSON: true
          VALIDATE_MARKDOWN: true
          VALIDATE_EDITORCONFIG: true
          VALIDATE_GIT_IGNORE: true
          VALIDATE_GIT_ATTRIBUTES: true
          VALIDATE_GIT_COMMITLINT: false
          VALIDATE_CHECKOV: false
          VALIDATE_TRIVY: false
          VALIDATE_PHP_PHPCS: false
          VALIDATE_PHP_PHPSTAN: false
          VALIDATE_PHP_PSALM: false
          VALIDATE_COMPOSER: false
