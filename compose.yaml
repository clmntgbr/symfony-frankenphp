services:
    php:
        container_name: ${PROJECT_NAME}-php
        image: ${IMAGES_PREFIX:-}app-php
        restart: unless-stopped
        env_file:
            - .env
        build:
            context: .
            target: frankenphp_dev
        networks:
            - substream-network
        depends_on:
            - database
            - rabbitmq
        environment:
            SERVER_NAME: ${SERVER_NAME:-localhost}, php:80
            MERCURE_PUBLISHER_JWT_KEY: ${CADDY_MERCURE_JWT_SECRET:-!ChangeThisMercureHubJWTSecretKey!}
            MERCURE_SUBSCRIBER_JWT_KEY: ${CADDY_MERCURE_JWT_SECRET:-!ChangeThisMercureHubJWTSecretKey!}
            MERCURE_URL: ${CADDY_MERCURE_URL:-http://php/.well-known/mercure}
            MERCURE_PUBLIC_URL: ${CADDY_MERCURE_PUBLIC_URL:-https://${SERVER_NAME:-localhost}/.well-known/mercure}
            MERCURE_JWT_SECRET: ${CADDY_MERCURE_JWT_SECRET:-!ChangeThisMercureHubJWTSecretKey!}
        volumes:
            - caddy_data:/data
            - caddy_config:/config
        ports:
            - target: 80
              published: ${HTTP_PORT:-80}
              protocol: tcp
            - target: 443
              published: ${HTTPS_PORT:-443}
              protocol: tcp
            - target: 443
              published: ${HTTP3_PORT:-443}
              protocol: udp
            
    database:
        image: postgres:latest
        container_name: ${PROJECT_NAME}-db
        networks:
            - substream-network
        env_file:
            - .env
        volumes:
            - database_data:/var/lib/postgresql/data
        ports:
            - "9001:5432"
        restart: unless-stopped

    rabbitmq:
        container_name: ${PROJECT_NAME}-rabbitmq
        restart: unless-stopped
        image: rabbitmq:3-management
        hostname: rabbitmq
        networks:
            - substream-network
        environment:
            RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
            RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS}
            RABBITMQ_DEFAULT_VHOST: ${RABBITMQ_VHOST}
            RABBITMQ_USER: ${RABBITMQ_USER}
            RABBITMQ_PASS: ${RABBITMQ_PASS}
            RABBITMQ_VHOST: ${RABBITMQ_VHOST}
        volumes:
            - rabbitmq_data:/var/lib/rabbitmq/mnesia/rabbit@my-rabbit
        ports:
            - "9002:5672"
            - "9003:15672"
    
    minio:
        container_name: ${PROJECT_NAME}-minio
        image: minio/minio:latest
        env_file:
            - .env
        ports:
            - '9004:9000'
            - '9005:9001'
        networks:
            - substream-network
        volumes:
            - minio_data:/data/minio
        command: 'minio server /data/minio --console-address ":9001"'
        environment:
            MINIO_ROOT_USER: ${MINIO_ROOT_USER}
            MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
            MINIO_BROWSER: "on"
   
    minio-setup:
        container_name: ${PROJECT_NAME}-minio-setup
        image: minio/mc:latest
        depends_on:
            - minio
        env_file:
            - .env
        volumes:
            - ./scripts:/scripts
        entrypoint: >
            /bin/sh -c "
            chmod +x /scripts/setup-minio.sh;
            sleep 10;
            /scripts/setup-minio.sh;
            "
        networks:
            - substream-network

    maildev:
        container_name: ${PROJECT_NAME}-maildev
        image: maildev/maildev
        ports:
            - "9006:1080"
            - "9007:1025"
        networks:
            - substream-network

networks:
  substream-network:
    external: true

volumes:
    caddy_data:
    caddy_config:
    database_data:
    rabbitmq_data:
    minio_data:
    minio_setup_data: